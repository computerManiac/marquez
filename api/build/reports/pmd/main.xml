<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.55.0" timestamp="2024-02-09T10:10:28.051">
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/MarquezContext.java">
<violation beginline="110" endline="110" begincolumn="7" endcolumn="28" rule="AvoidReassigningParameters" ruleset="Best Practices" package="marquez" class="MarquezContext" method="MarquezContext" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#avoidreassigningparameters" priority="2">
Avoid reassigning parameters such as 'runTransitionListeners'
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/api/OpenLineageResource.java">
<violation beginline="90" endline="90" begincolumn="32" endcolumn="37" rule="UnusedFormalParameter" ruleset="Best Practices" package="marquez.api" class="OpenLineageResource" method="onComplete" variable="result" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#unusedformalparameter" priority="3">
Avoid unused method parameters such as 'result'.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/api/filter/exclusions/Exclusions.java">
<violation beginline="11" endline="11" begincolumn="24" endcolumn="98" rule="AvoidFieldNameMatchingTypeName" ruleset="Error Prone" package="marquez.api.filter.exclusions" class="Exclusions" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidfieldnamematchingtypename" priority="3">
It is somewhat confusing to have a field name matching the declaring class name
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/api/models/ResultsPage.java">
<violation beginline="23" endline="23" begincolumn="18" endcolumn="46" rule="ConstructorCallsOverridableMethod" ruleset="Error Prone" package="marquez.api.models" class="ResultsPage" method="ResultsPage" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#constructorcallsoverridablemethod" priority="1">
Overridable method 'setValue' called during object construction
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/cli/DbMigrationCommand.java">
<violation beginline="99" endline="106" begincolumn="14" endcolumn="7" rule="MissingOverride" ruleset="Best Practices" package="marquez.cli" class="DbMigrationCommand$MarquezMigrations" method="run" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'run(Jdbi, Namespace)' is missing an @Override annotation.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/cli/MetadataCommand.java">
<violation beginline="206" endline="216" begincolumn="5" endcolumn="5" rule="UseTryWithResources" ruleset="Best Practices" package="marquez.cli" class="MetadataCommand" method="writeOlEvents" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#usetrywithresources" priority="3">
Consider using a try-with-resources statement instead of explicitly closing the resource
</violation>
<violation beginline="211" endline="211" begincolumn="7" endcolumn="25" rule="AvoidPrintStackTrace" ruleset="Best Practices" package="marquez.cli" class="MetadataCommand" method="writeOlEvents" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#avoidprintstacktrace" priority="3">
Avoid printStackTrace(); use a logger call instead.
</violation>
<violation beginline="231" endline="231" begincolumn="23" endcolumn="26" rule="NullAssignment" ruleset="Error Prone" package="marquez.cli" class="MetadataCommand" method="newRun" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/common/Utils.java">
<violation beginline="376" endline="376" begincolumn="52" endcolumn="76" rule="UseLocaleWithCaseConversions" ruleset="Error Prone" package="marquez.common" class="Utils$DatasetVersionData$DatasetVersionDataBuilder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#uselocalewithcaseconversions" priority="3">
When doing a String.toLowerCase()/toUpperCase() call, use a Locale
</violation>
<violation beginline="382" endline="382" begincolumn="48" endcolumn="72" rule="UseLocaleWithCaseConversions" ruleset="Error Prone" package="marquez.common" class="Utils$DatasetVersionData$DatasetVersionDataBuilder" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#uselocalewithcaseconversions" priority="3">
When doing a String.toLowerCase()/toUpperCase() call, use a Locale
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/common/models/FlexibleDateTimeDeserializer.java">
<violation beginline="26" endline="56" begincolumn="8" endcolumn="1" rule="MissingSerialVersionUID" ruleset="Error Prone" package="marquez.common.models" class="FlexibleDateTimeDeserializer" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#missingserialversionuid" priority="3">
Classes implementing Serializable should set a serialVersionUID
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/Columns.java">
<violation beginline="278" endline="278" begincolumn="14" endcolumn="17" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="marquez.db" class="Columns" method="mapOrNull" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/DatasetDao.java">
<violation beginline="363" endline="363" begincolumn="23" endcolumn="27" rule="UnusedLocalVariable" ruleset="Best Practices" package="marquez.db" class="DatasetDao" method="upsertDatasetMeta" variable="dvRow" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'dvRow'.
</violation>
<violation beginline="385" endline="385" begincolumn="9" endcolumn="44" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="marquez.db" class="DatasetDao" method="updateDatasetMetric" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/DatasetVersionDao.java">
<violation beginline="133" endline="133" begincolumn="14" endcolumn="17" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="marquez.db" class="DatasetVersionDao" method="toFields" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
<violation beginline="135" endline="135" begincolumn="20" endcolumn="33" rule="UnusedLocalVariable" ruleset="Best Practices" package="marquez.db" class="DatasetVersionDao" method="toFields" variable="openLineageDao" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'openLineageDao'.
</violation>
<violation beginline="150" endline="150" begincolumn="9" endcolumn="51" rule="CompareObjectsWithEquals" ruleset="Error Prone" package="marquez.db" class="DatasetVersionDao" method="updateDatasetVersionMetric" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#compareobjectswithequals" priority="3">
Use equals() to compare object references.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/OpenLineageDao.java">
<violation beginline="906" endline="906" begincolumn="17" endcolumn="57" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="marquez.db" class="OpenLineageDao" method="upsertLineageDataset" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="1082" endline="1082" begincolumn="13" endcolumn="35" rule="UseLocaleWithCaseConversions" ruleset="Error Prone" package="marquez.db" class="OpenLineageDao" method="getRunState" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#uselocalewithcaseconversions" priority="3">
When doing a String.toLowerCase()/toUpperCase() call, use a Locale
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/RunDao.java">
<violation beginline="386" endline="386" begincolumn="20" endcolumn="33" rule="UnusedLocalVariable" ruleset="Best Practices" package="marquez.db" class="RunDao" method="upsertOutputDatasetsFor" variable="openLineageDao" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 'openLineageDao'.
</violation>
<violation beginline="425" endline="425" begincolumn="14" endcolumn="17" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="marquez.db" class="RunDao" method="toSchemaFields" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/RunFacetsDao.java">
<violation beginline="105" endline="105" begincolumn="31" endcolumn="71" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="marquez.db" class="RunFacetsDao" method="insertRunFacetsFor" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="108" endline="108" begincolumn="19" endcolumn="64" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="marquez.db" class="RunFacetsDao" method="insertRunFacetsFor" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/exceptions/DbRetentionException.java">
<violation beginline="11" endline="30" begincolumn="14" endcolumn="1" rule="MissingSerialVersionUID" ruleset="Error Prone" package="marquez.db.exceptions" class="DbRetentionException" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#missingserialversionuid" priority="3">
Classes implementing Serializable should set a serialVersionUID
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/mappers/DatasetMapper.java">
<violation beginline="110" endline="110" begincolumn="14" endcolumn="17" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="marquez.db.mappers" class="DatasetMapper" method="toTags" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/mappers/DatasetVersionMapper.java">
<violation beginline="58" endline="58" begincolumn="72" endcolumn="75" rule="NullAssignment" ruleset="Error Prone" package="marquez.db.mappers" class="DatasetVersionMapper" method="map" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="76" endline="76" begincolumn="72" endcolumn="75" rule="NullAssignment" ruleset="Error Prone" package="marquez.db.mappers" class="DatasetVersionMapper" method="map" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/mappers/ExtendedRunRowMapper.java">
<violation beginline="56" endline="56" begincolumn="15" endcolumn="18" rule="NullAssignment" ruleset="Error Prone" package="marquez.db.mappers" class="ExtendedRunRowMapper" method="map" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="58" endline="58" begincolumn="95" endcolumn="98" rule="NullAssignment" ruleset="Error Prone" package="marquez.db.mappers" class="ExtendedRunRowMapper" method="map" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/mappers/JobRowMapper.java">
<violation beginline="58" endline="58" begincolumn="14" endcolumn="17" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="marquez.db.mappers" class="JobRowMapper" method="getDatasetFromJsonOrNull" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/mappers/LineageEventMapper.java">
<violation beginline="33" endline="33" begincolumn="7" endcolumn="43" rule="PreserveStackTrace" ruleset="Best Practices" package="marquez.db.mappers" class="LineageEventMapper" method="map" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#preservestacktrace" priority="3">
New exception is thrown in catch block, original stack trace may be lost
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/mappers/RunMapper.java">
<violation beginline="93" endline="93" begincolumn="15" endcolumn="18" rule="NullAssignment" ruleset="Error Prone" package="marquez.db.mappers" class="RunMapper" method="map" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="96" endline="96" begincolumn="15" endcolumn="18" rule="NullAssignment" ruleset="Error Prone" package="marquez.db.mappers" class="RunMapper" method="map" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="124" endline="124" begincolumn="14" endcolumn="17" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="marquez.db.mappers" class="RunMapper" method="toArgsOrNull" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/mappers/RunRowMapper.java">
<violation beginline="47" endline="47" begincolumn="15" endcolumn="18" rule="NullAssignment" ruleset="Error Prone" package="marquez.db.mappers" class="RunRowMapper" method="map" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="49" endline="49" begincolumn="95" endcolumn="98" rule="NullAssignment" ruleset="Error Prone" package="marquez.db.mappers" class="RunRowMapper" method="map" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#nullassignment" priority="3">
Assigning an Object to null is a code smell.  Consider refactoring.
</violation>
<violation beginline="55" endline="55" begincolumn="34" endcolumn="78" rule="UnusedPrivateMethod" ruleset="Best Practices" package="marquez.db.mappers" class="RunRowMapper" method="toDatasetVersion" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#unusedprivatemethod" priority="3">
Avoid unused private methods such as 'toDatasetVersion(ResultSet,String)'.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/db/migrations/V57_1__BackfillFacets.java">
<violation beginline="179" endline="179" begincolumn="27" endcolumn="27" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="marquez.db.migrations" class="V57_1__BackfillFacets" method="migrate" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/graphql/mapper/LineageResultMapper.java">
<violation beginline="41" endline="41" begincolumn="11" endcolumn="38" rule="LooseCoupling" ruleset="Best Practices" package="marquez.graphql.mapper" class="LineageResultMapper" method="convertToDatasetResult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedHashSet'; use the interface instead
</violation>
<violation beginline="51" endline="51" begincolumn="14" endcolumn="17" rule="ReturnEmptyCollectionRatherThanNull" ruleset="Error Prone" package="marquez.graphql.mapper" class="LineageResultMapper" method="convertToDatasetResult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#returnemptycollectionratherthannull" priority="1">
Return an empty collection rather than null.
</violation>
<violation beginline="59" endline="80" begincolumn="26" endcolumn="3" rule="AbstractClassWithoutAbstractMethod" ruleset="Best Practices" package="marquez.graphql.mapper" class="LineageResultMapper$LineageResult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#abstractclasswithoutabstractmethod" priority="3">
This abstract class does not have any abstract methods
</violation>
<violation beginline="90" endline="90" begincolumn="5" endcolumn="32" rule="LooseCoupling" ruleset="Best Practices" package="marquez.graphql.mapper" class="LineageResultMapper$JobResult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedHashSet'; use the interface instead
</violation>
<violation beginline="91" endline="91" begincolumn="5" endcolumn="32" rule="LooseCoupling" ruleset="Best Practices" package="marquez.graphql.mapper" class="LineageResultMapper$JobResult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedHashSet'; use the interface instead
</violation>
<violation beginline="96" endline="96" begincolumn="9" endcolumn="36" rule="LooseCoupling" ruleset="Best Practices" package="marquez.graphql.mapper" class="LineageResultMapper$JobResult" method="JobResult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedHashSet'; use the interface instead
</violation>
<violation beginline="97" endline="97" begincolumn="9" endcolumn="36" rule="LooseCoupling" ruleset="Best Practices" package="marquez.graphql.mapper" class="LineageResultMapper$JobResult" method="JobResult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedHashSet'; use the interface instead
</violation>
<violation beginline="107" endline="107" begincolumn="5" endcolumn="28" rule="LooseCoupling" ruleset="Best Practices" package="marquez.graphql.mapper" class="LineageResultMapper$DatasetResult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedHashSet'; use the interface instead
</violation>
<violation beginline="108" endline="108" begincolumn="5" endcolumn="28" rule="LooseCoupling" ruleset="Best Practices" package="marquez.graphql.mapper" class="LineageResultMapper$DatasetResult" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#loosecoupling" priority="3">
Avoid using implementation types like 'LinkedHashSet'; use the interface instead
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/graphql/mapper/RowMap.java">
<violation beginline="10" endline="10" begincolumn="8" endcolumn="50" rule="MissingSerialVersionUID" ruleset="Error Prone" package="marquez.graphql.mapper" class="RowMap" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#missingserialversionuid" priority="3">
Classes implementing Serializable should set a serialVersionUID
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/service/NodeIdNotFoundException.java">
<violation beginline="15" endline="39" begincolumn="8" endcolumn="1" rule="MissingSerialVersionUID" ruleset="Error Prone" package="marquez.service" class="NodeIdNotFoundException" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_errorprone.html#missingserialversionuid" priority="3">
Classes implementing Serializable should set a serialVersionUID
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/service/OpenLineageService.java">
<violation beginline="149" endline="149" begincolumn="25" endcolumn="73" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="marquez.service" class="OpenLineageService" method="createAsync" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/service/RunService.java">
<violation beginline="81" endline="81" begincolumn="7" endcolumn="20" rule="AvoidReassigningParameters" ruleset="Best Practices" package="marquez.service" class="RunService" method="markRunAs" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#avoidreassigningparameters" priority="2">
Avoid reassigning parameters such as 'transitionedAt'
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/service/models/Dataset.java">
<violation beginline="41" endline="111" begincolumn="17" endcolumn="1" rule="AbstractClassWithoutAbstractMethod" ruleset="Best Practices" package="marquez.service.models" class="Dataset" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#abstractclasswithoutabstractmethod" priority="3">
This abstract class does not have any abstract methods
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/service/models/DatasetMeta.java">
<violation beginline="35" endline="68" begincolumn="17" endcolumn="1" rule="AbstractClassWithoutAbstractMethod" ruleset="Best Practices" package="marquez.service.models" class="DatasetMeta" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#abstractclasswithoutabstractmethod" priority="3">
This abstract class does not have any abstract methods
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/service/models/DatasetVersion.java">
<violation beginline="42" endline="105" begincolumn="17" endcolumn="1" rule="AbstractClassWithoutAbstractMethod" ruleset="Best Practices" package="marquez.service.models" class="DatasetVersion" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#abstractclasswithoutabstractmethod" priority="3">
This abstract class does not have any abstract methods
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/service/models/LineageEvent.java">
<violation beginline="107" endline="128" begincolumn="27" endcolumn="3" rule="AbstractClassWithoutAbstractMethod" ruleset="Best Practices" package="marquez.service.models" class="LineageEvent$BaseFacet" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#abstractclasswithoutabstractmethod" priority="3">
This abstract class does not have any abstract methods
</violation>
<violation beginline="222" endline="222" begincolumn="27" endcolumn="60" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="marquez.service.models" class="LineageEvent$Job" method="isStreamingJob" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="587" endline="587" begincolumn="65" endcolumn="85" rule="UnusedAssignment" ruleset="Best Practices" package="marquez.service.models" class="LineageEvent$ColumnLineageDatasetFacetFields" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The field initializer for 'additional' is never used (overwritten on line 601)
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/tracing/TracingSQLLogger.java">
<violation beginline="28" endline="42" begincolumn="10" endcolumn="3" rule="MissingOverride" ruleset="Best Practices" package="marquez.tracing" class="TracingSQLLogger" method="logBeforeExecution" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'logBeforeExecution(StatementContext)' is missing an @Override annotation.
</violation>
<violation beginline="39" endline="39" begincolumn="14" endcolumn="51" rule="UnusedAssignment" ruleset="Best Practices" package="marquez.tracing" class="TracingSQLLogger" method="logBeforeExecution" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The value assigned to variable 'span' is never used
</violation>
<violation beginline="44" endline="50" begincolumn="10" endcolumn="3" rule="MissingOverride" ruleset="Best Practices" package="marquez.tracing" class="TracingSQLLogger" method="logAfterExecution" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'logAfterExecution(StatementContext)' is missing an @Override annotation.
</violation>
<violation beginline="52" endline="59" begincolumn="10" endcolumn="3" rule="MissingOverride" ruleset="Best Practices" package="marquez.tracing" class="TracingSQLLogger" method="logException" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#missingoverride" priority="3">
The method 'logException(StatementContext, SQLException)' is missing an @Override annotation.
</violation>
</file>
<file name="/Users/anwar/Fahim/marquez/api/src/main/java/marquez/tracing/TracingServletFilter.java">
<violation beginline="35" endline="35" begincolumn="76" endcolumn="83" rule="UnusedFormalParameter" ruleset="Best Practices" package="marquez.tracing" class="TracingServletFilter" method="transaction" variable="response" externalInfoUrl="https://pmd.github.io/pmd-6.55.0/pmd_rules_java_bestpractices.html#unusedformalparameter" priority="3">
Avoid unused method parameters such as 'response'.
</violation>
</file>
</pmd>
